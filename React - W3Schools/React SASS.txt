React SASS:

Sass is a CSS pre-processor. Sass reduces repetition of CSS and therefore can save time.

Sass files are executed on the server and sends CSS to the browser.

Points about Sass:
- Sass stands for Syntactically Awesome Stylesheet.
- It is an extension to CSS.
- It is a CSS pre-processor.
- Sass is completely compatible with all versions of CSS.
- Sass reduces the repetition of CSS and can save time.
- Sass is free to download and use.

As stylesheets get large and complex and harder to maintain, a CSS pre-processor can help. Sass allows you to use features that do not exist in CSS, like variables, nested rules, mixins, imports, inheritance, built-in functions and other stuff.

To use Sass, you need to install it into your project by running the following command in your project directory:

npm install node-sass

Creating a Sass file:
You create a Sass file the same way you create a CSS file but with the extension .scss.

In the following example, a variable is created called $myColor and is assigned the color red when the 'h1' is called.
In the file UserStyle6.js, in the component, every mention of the <h1> element gets the color assigned in the sass file.
This is then imported into the index.js and displayed in the index.html file.

mysass.scss:

$myColor: red;

h1 {
	color: $myColor;
} 

UserStyle6.js:

import React from 'react';
import ReactDOM from 'react-dom';
import './mysass.scss';

class MyStyle6 extends React.Component {

	render() {

		return(

			<div>
				<h1>Hello SASS style</h1>
			</div>
		
		);	
	}
} 

export default MyStyle6;

index.js:

import MyStyle6 from './UserStyle6';

...


ReactDOM.render(<MyStyle6 />, document.getElementById('styleElm6'));

index.html:

<div id='styleElm6'></div>



For more information of Sass: https://www.w3schools.com/sass/sass_intro.asp

 