Node.js Events:

Node.js is perfect for event driven applications.

*************************************************

Events in Node.js:

Every action on a computer is an event. Such as a connection being made or a file being opened.

Objects in Node.js can fire events, example: readStream object fires events when opening and closing a file.

In the following example When a certain text is opened, the console prints the messages stating file is opened.

var fs = require('fs');

var readStream = fs.createReadStream('./demofile.txt');

/**	Writes to the console when opened	**/
readStream.on('open', function() {
	console.log('The file is opened');
});

*************************************************

Events Module:

Node.js has a built-in module called 'Events' which can create-, fire- and listen for- your own events.

To include it you use the require() method. Also, all event properties and methods are an instance of an EventEmitter object.

To be able to access these properties and methods, you create an EventEmitter object:

var events = require('events');
var eventEmitter = new events.EventEmitter();

*************************************************

The EventEmitter Object:

You can assign event handlers to your own events using the EventEmitter object. In the following example, we create a function that is executed when a 'scream' event is fired.


In the following example, we have created a function called myEventHandler() that prints 'I hear a scream' when called.
We have included the EventEmitter object that calls the myEventHandler() function when emit() function is 'fired' and passes the parameter 'scream.

var events = require('events');
var eventEmitter = new events.EventEmitter();

//Creating the event handler/function
var myEventHandler = function () {
	console.log('I hear a scream');
}  

//Assign the event handler to an event
eventEmitter.on('scream', myEventHandler);

//Fire the 'scream' event
eventEmitter.emit('scream');


